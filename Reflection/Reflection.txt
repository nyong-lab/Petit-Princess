

리플렉션 로드맵

1. 리플렉션 하고싶은 클래스에 TypeInfo 객체 생성 매크로 입력
	
	- 클래스의 정보를 담고 있는 Static TypeInfo 객체 생성
	- 부모 클래스의 TypeInfo 객체가 있다면 Super 별칭으로 저장
	- 나의 타입을 ThisType 별칭으로 저장
	- TypeInfo 객체를 반환하는 함수를 가상함수로 만들어서 부모타입으로 
	클래스를 만들더라도 유연하게 실제 타입을 반환

2. 클래스의 멤버 변수 정보를 생성하고 TypeInfo 객체에 등록하기 위해 Property 매크로 입력

	- 변수 등록을 실행시켜주는 Static RegisterPropertyExcutor 구조체 생성
	- 변수 등록하는 PropertyRegister를 생성 
		
		PropertyRegister 템플릿 인자
		a. 소유하고 있는 객체의 타입
		b. 변수의 타입
		c. 변수 포인터 타입
		d. 변수 포인터 

	- 생성자 매개변수로 변수의 이름과 클래스의 TypeInfo 객체 전달

2-2 ProperyRegister

	- 클래스 내에 일반적인 멤버 변수인지 static 멤버 변수인지 체크
	- 일반 멤버 변수라면 PropertyHandler 템플릿 클래스 생성 

		PropertyHandler 템플릿 인자
		a. 소유하고 있는 객체의 타입
		b. 변수 타입 전달

	추후에 이를 활용하여 값을 설정하거나 얻어낼 수 있다.

	- static 멤버 변수라면 StaticPropertyHandler 생성

	이처럼 handler 클래스를 나누는 이유는 멤버 변수와 static 멤버 변수에 대해서
	접근하고 값을 얻어내거나 수정하는것에 있어서 접근방식이 달라지기 때문이다.

	- Property 클래스 생성시 초기화를 해주는 PropertyInitializer 구조체 생성
		
		PropertyInitializer 구조체 생성시 전달되는 값
		a. 변수의 이름
		b. 변수를 소유하고있는 클래스의 TypeInfo 객체
		c. 변수를 관리할 Handler 클래스

	- Property 생성자 호출하며 멤버변수에 값을 대입하고 TypeInfo 객체에 Property 클래스를 추가한다.
